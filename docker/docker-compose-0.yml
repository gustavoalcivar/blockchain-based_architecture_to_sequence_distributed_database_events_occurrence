version: '3.6'

volumes:
  pbft-shared:
  mongo_data:

networks:
  _network:
    external:
      name: audit_network

services:

# -------------=== rest api ===-------------

  rest-api-0:
    image: hyperledger/sawtooth-rest-api:chime
    container_name: sawtooth-rest-api-0
    expose:
      - 8008
    command: |
      bash -c "
        sawtooth-rest-api \
          --connect tcp://validator-0:4004 \
          --bind rest-api-0:8008
      "
    networks:
      - _network
    stop_signal: SIGKILL

# -------------=== settings tp ===-------------

  settings-tp-0:
    image: hyperledger/sawtooth-settings-tp:chime
    container_name: sawtooth-settings-tp-0
    expose:
      - 4004
    command: settings-tp -C tcp://validator-0:4004
    networks:
      - _network
    stop_signal: SIGKILL

# -------------=== shell ===-------------

  shell:
    image: hyperledger/sawtooth-shell:chime
    container_name: sawtooth-shell
    volumes:
      - ./pbft-shared:/pbft-shared
    command: |
      bash -c "
        sawtooth keygen
        tail -f /dev/null
      "
    networks:
      - _network
    stop_signal: SIGKILL

# -------------=== validators ===-------------

  validator-0:
    image: hyperledger/sawtooth-validator:chime
    container_name: sawtooth-validator-0
    expose:
      - 4004
      - 5050
      - 8800
    volumes:
      - ./pbft-shared:/pbft-shared
    command: |
      bash -c "
        if [ -e /pbft-shared/validators/validator-0.priv ]; then
          cp /pbft-shared/validators/validator-0.pub /etc/sawtooth/keys/validator.pub
          cp /pbft-shared/validators/validator-0.priv /etc/sawtooth/keys/validator.priv
        fi &&
        if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
          sawadm keygen
          mkdir -p /pbft-shared/validators || true
          cp /etc/sawtooth/keys/validator.pub /pbft-shared/validators/validator-0.pub
          cp /etc/sawtooth/keys/validator.priv /pbft-shared/validators/validator-0.priv
        fi &&
        if [ ! -e config-genesis.batch ]; then
          sawset genesis -k /etc/sawtooth/keys/validator.priv -o config-genesis.batch
        fi &&
        while [[ ! -f /pbft-shared/validators/validator-1.pub || \
                 ! -f /pbft-shared/validators/validator-2.pub || \
                 ! -f /pbft-shared/validators/validator-3.pub ]];
        do sleep 1; done
        echo sawtooth.consensus.pbft.members=\\['\"'$$(cat /pbft-shared/validators/validator-0.pub)'\"','\"'$$(cat /pbft-shared/validators/validator-1.pub)'\"','\"'$$(cat /pbft-shared/validators/validator-2.pub)'\"','\"'$$(cat /pbft-shared/validators/validator-3.pub)'\"'\\] &&
        if [ ! -e config.batch ]; then
         sawset proposal create \
            -k /etc/sawtooth/keys/validator.priv \
            sawtooth.consensus.algorithm.name=pbft \
            sawtooth.consensus.algorithm.version=1.0 \
            sawtooth.consensus.pbft.members=\\['\"'$$(cat /pbft-shared/validators/validator-0.pub)'\"','\"'$$(cat /pbft-shared/validators/validator-1.pub)'\"','\"'$$(cat /pbft-shared/validators/validator-2.pub)'\"','\"'$$(cat /pbft-shared/validators/validator-3.pub)'\"'\\] \
            sawtooth.publisher.max_batches_per_block=1200 \
            -o config.batch
        fi &&
        if [ ! -e /var/lib/sawtooth/genesis.batch ]; then
          sawadm genesis config-genesis.batch config.batch
        fi &&
        if [ ! -e /root/.sawtooth/keys/my_key.priv ]; then
          sawtooth keygen my_key
        fi &&
        sawtooth-validator -vv \
          --endpoint tcp://validator-0:8800 \
          --bind component:tcp://eth0:4004 \
          --bind consensus:tcp://eth0:5050 \
          --bind network:tcp://eth0:8800 \
          --scheduler parallel \
          --peering static \
          --maximum-peer-connectivity 10000
      "
    networks:
      - _network

# -------------=== pbft engines ===-------------

  pbft-0:
    image: hyperledger/sawtooth-pbft-engine:chime
    container_name: sawtooth-pbft-engine-0
    command: pbft-engine -vv --connect tcp://validator-0:5050
    networks:
      - _network
    stop_signal: SIGKILL

# --------=== audit transaction processor ===--------

  audit-tp-0:
    image: audit-tp:latest
    container_name: audit-tp-0
    environment:
      - NODE=0
      - TP_FAMILY=AuditSystem
      - TP_VERSION=1.0
    depends_on:
      - validator-0
    build:
      context: ./tp
      dockerfile: ../Dockerfile
    networks:
      - _network

# --------=== blockchain client ===--------

  client-0:
    image: client
    container_name: client-0
    expose:
      - 4000
    ports:
      - "4000:4000"
    environment:
      - NODE=0
      - CLIENT_PORT=4000
      - TP_FAMILY=AuditSystem
      - TP_VERSION=1.0
    depends_on:
      - rest-api-0
    build:
      context: ./client
      dockerfile: ../Dockerfile
    networks:
      - _network

# --------=== blockchain frontend ===--------
  
  vue-js:
    build:
      context: ./web
    ports:
      - 8080:8080
    environment:
      - API_URL=http://192.168.100.200:3000/
      - VUE_APP_API_URL=http://192.168.100.200:3000/
    depends_on:
      - rest-api-0
      - mongo-db
    networks:
      - _network

# --------=== HL Explorer rest-api ===--------

  express-js:
    image: express-js
    build:
      context: ./api
    ports:
      - 3000:3000
    depends_on: 
      - mongo-db
    environment:
      - DATABASE_URL=mongo-db
      - WAIT_HOSTS=mongo-db:27017
      - NODE_ENV=development
      - PORT=3000
      - VALIDATOR_URL=tcp://validator-0:4004
      - REST_API_URL=http://rest-api-0:8008
    networks:
      - _network

# --------=== HL Explorer datadase ===--------

  mongo-db:
    container_name: mongo-db
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    depends_on:
      - rest-api-0
    networks:
      - _network